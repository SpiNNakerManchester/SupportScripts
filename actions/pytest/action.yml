# Copyright (c) 2020 The University of Manchester
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

name: "Run py.test"
description: |
  Runs pytest and optionally coveralls.
  Note that installing pytest and coveralls in the environment before this action is up to the caller.
  Doesn't (currently) support parallel coverage gathering.
inputs:
  tests:
    description: The name of the Python package containing the tests
    required: true
  options:
    description: Extra options to pass to pytest
    required: false
    default: ""
  coverage:
    description: Whether to do coverage
    required: false
    default: false
  cover-packages:
    description: The names of the Python packages to get coverage of.
    required: false
    default: ""
  coveralls-token:
    description: The secret token used for uploading to coveralls.io
    required: false
    default: ""
  coveralls-flag-name:
    description: >
      Job flag name, e.g. "Unit", "Functional", or "Integration". Will be shown
      in the Coveralls UI.
    required: false
    default: Unit
runs:
  using: composite
  steps: 
    - run: |
        if [ $DO_COVERAGE = "true" ]; then
          ${{ github.action_path }}/run_pytest.bash ${{ inputs.cover-packages }}
        else
          ${{ github.action_path }}/run_pytest.bash
        fi
      shell: bash
      env:
        TEST_PKG: ${{ inputs.tests }}
        DO_COVERAGE: ${{ inputs.coverage == 'true' }}
        EXTRA_OPTS: ${{ inputs.options }}
    - run: |
        if [ $DO_COVERAGE = "true" ]; then
          coveralls || echo "::warning::Make sure you have used secrets.GITHUB_TOKEN, not secrets.COVERALLS_REPO_TOKEN"
        fi
      env:
        COVERALLS_SERVICE_NAME: github
        COVERALLS_REPO_TOKEN: ${{ inputs.coveralls-token }}
        COVERALLS_GIT_COMMIT: ${{ github.sha }}
        COVERALLS_GIT_BRANCH: ${{ github.ref }}
        COVERALLS_FLAG_NAME: ${{ inputs.coveralls-flag-name }}
        NODE_COVERALLS_DEBUG: 1
        DO_COVERAGE: ${{ inputs.coverage == 'true' }}
      shell: bash
