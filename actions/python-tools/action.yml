# Copyright (c) 2020 The University of Manchester
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: "Install Advanced Python Tools"
description: >
  Installs tooling to support advanced Python testing.
inputs:
  check_tools:
    description: Install the checking tools
    required: false
    default: install
  pylint-version:
    description: The version of pylint desired
    required: false
    default: ""
  coverage:
    description: Whether to install tools for coverage checking
    required: false
    default: "true"
  coverage-version:
    description: The version of coverage desired
    required: false
    default: ">= 6.0"
  spell-checker-implementation:
    description: >
      The packages required for the implementation of the spell checker. These
      run behind the enchant API. This may include installing a particular 
      dictionary.
    required: false
    default: "hunspell hunspell-en-gb"
runs:
  using: composite
  steps:
  - name: Install spell checker
    if: ${{ inputs.check_tools == 'install' }}
    shell: bash
    run: source $SUPPORT_DIR/setup-spell.bash
    env:
      SPELL_PACKAGES: ${{ inputs.spell-checker-implementation }}
      SUPPORT_DIR: ${{ github.action_path }}
  - name: Upgrade Python baseline tooling
    shell: bash
    run: python -m pip install --upgrade setuptools wheel
  - name: Ensure correct version of pip
    shell: bash
    run: python -m pip install pip
  - name: Install extended Python tooling
    if: ${{ inputs.check_tools == 'install'}}
    shell: bash
    run: |
      pip install flake8 "pylint $PYLINT_VERSION" pyenchant
      if [ $DO_COVERAGE = "true" ]; then
        pip install "coverage $COVERAGE_VERSION" coveralls
      fi
    env:
      PYLINT_VERSION: ${{ inputs.pylint-version }}
      DO_COVERAGE: ${{ inputs.coverage == 'true' }}
      COVERAGE_VERSION: ${{ inputs.coverage-version }}
