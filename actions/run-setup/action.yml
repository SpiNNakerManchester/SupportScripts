# Copyright (c) 2020 The University of Manchester
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: "Install Python Package from Source"
description: >
  Installs a (presumably SpiNNaker-related) Python package from a checkout of 
  the source tree.
  Should be run with the working directory at the root of the checkout.
  Requires the existance of a setup.py in the working directory.
inputs:
  preinstall:
    description: Whether to run the requirements.txt ahead of the main install
    required: false
    default: "false"
  requirements-path:
    description: The name of the requirements.txt
    required: false
    default: requirements.txt
  test-requirements:
    description: Whether to run the requirements-test.txt after the main install
    required: false
    default: "true"
  test-requirements-path:
    description: The name of the requirements-test.txt
    required: false
    default: requirements-test.txt
  mode:
    description: What mode to install in
    required: false
    default: develop
runs:
  using: composite
  steps: 
    - run: |
        if [ ${{ inputs.preinstall }} = "true" ]; then
          echo "::group::Doing dependency preinstall"
          pip install -r ${{ inputs.requirements-path }}
          code=$?
          echo "::endgroup::"
          exit $code
        fi
      shell: bash
    - run: exec python setup.py ${{ inputs.mode }}
      shell: bash
    - run: |
        if [ ${{ inputs.test-requirements }} = "true" ]; then
          echo "::group::Doing test-code install"
          pip install -r ${{ inputs.test-requirements-path }}
          code=$?
          echo "::endgroup::"
          exit $code
        fi
      shell: bash
